<?php
// $Id: noie6.module,v 1.1.2.1 2010/06/28 16:37:57 altrugon Exp $

/**
 * @file
 * Display a message in Internet Explorer 6 to let the user knows his/her browser is not supported.
 * This message also offer to the user different browsers that can be used instead.
 */

/**
 * Display help and module information
 * @param path which path of the site we're displaying help
 * @param arg array that holds the current path as would be returned from arg() function
 * @return help text for the path
 */
function noie6_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#noie6":
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>'.  t('The No IE6 module displays a message to Internet Explorer 6 users informing them that their browser is not supported, and why. For more information, see the online handbook entry for <a href="@noie6">No IE6</a>.', array('@noie6' => 'http://drupal.org/handbook/modules/noie6')) . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Prompting users to upgrade from IE6') . '</dt>';
      $output .= '<dd>' . t('When the module is enabled, anyone using Internet Explorer 6 will see a warning message on the site. The message informs the user about why the browser is not supported on the site, and which alternatives there are.') . '</dd>';
      $output .= '<dt>' . t('Administering the module') . '</dt>';
      $output .= '<dd>' . t('The <a href="@settings">settings page</a> allows you to change: the displayed text, overlay, and the list of alternative browsers.', array('@settings' => url('admin/settings/noie6'))) . '</dd>';
      $output .= '<dt>' . t('User permissions') . '</dt>';
      $output .= '<dd>' . t('The No IE6 module makes a number of permissions available for administration and browsing without the warning message, which can be set by role on the <a href="@permissions">permissions page</a>.', array('@permissions' => url('admin/settings/permissions'))) . '</dd>';
      $output .= '</dl>';
  }
  return $output;
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function noie6_perm() {
  return array('browse without warning', 'administer noie6');
}

/**
 * Access check for the noie6 administration page
 * @return boolean
 */
function noie6_admin_page_access() {
  return user_access('access administration pages') || user_access('administer noie6');
}

/**
 * Implementation of hook_menu().
 */
function noie6_menu() {
  $items = array();
  
  $items['admin/settings/noie6'] = array(
    'title' => 'No IE6',
    'description' => 'Modify this settings for a better fit with your design. Remember you can also style the module by CSS.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('noie6_admin_settings'),
    'access callback' => 'noie6_admin_page_access',
    'access arguments' => array(1),
    'type' => MENU_NORMAL_ITEM,
   );
  
  return $items;
}

/**
* Function to order the array of browsers by weight.
*/
function noie6_cmp($a, $b) {
    if ($a->weight == $b->weight) {
        return 0;
    }
    return ($a->weight < $b->weight) ? -1 : 1;
}

/**
* The admin settings form
*/
function noie6_admin_settings(&$form_state) {
  $form = array();
  
  // Overlay option
  $form['noie6_overlay'] = array(
    '#description' => t('Apply an overlay layer to the viewport making the content page no accessible.'),
    '#title' => t('Apply overlay layer'),
    '#type' => 'checkbox',
    '#default_value' => variable_get('noie6_overlay', TRUE),
  );
  
  // Explanation Message
  $form['noie6_body'] = array(
    '#description' => t('Let the users know why IE6 is not supported.'),
    '#title' => t('Explanation Message'),
    '#type' => 'textarea',
    '#default_value' => variable_get('noie6_body', 'Sorry but your browser is not supported.'),
  );
  
  // Drag and drop table
  $browsers = variable_get('noie6_browsers', array());
  uasort($browsers, 'noie6_cmp');

  foreach ($browsers as $i => $browser) {
    //create a partial table row containing the data from the table
    $data = array(
      $browser->name,
    );

    //add our static "row" data into a form value
    $form['rows'][$i]['data']=array(
                                 '#type' => 'value',
                                 '#value' => $data
                               );

    //add URL
    $form['rows'][$i]['url-' . $i]=array(
      '#type' => 'textfield',
      '#size' => 60,
      '#default_value' => $browser->url,
    );

    //add exclude flag
    $form['rows'][$i]['exclude-' . $i]=array(
      '#type' => 'checkbox',
      '#default_value' => $browser->exclude,
    );

    //now create the weight form element.  
    //NOTE how we add the id into the element key
    $form['rows'][$i]['weight-' . $i]=array(
      '#type' => 'textfield',
      '#size' => 5,
      '#default_value' => $browser->weight,
      //add a specific class in here - we need this later
      '#attributes' => array('class' => 'weight'),
    );
  }    
  
  // Let the system module add submit buttons and manage validation
  //$form = system_settings_form($form);

  //Don't forget the submit buttons
  $form['buttons']['submit'] = array('#type' => 'submit', '#value' => t('Save configuration') );
  $form['buttons']['reset'] = array('#type' => 'submit', '#value' => t('Reset to defaults') );

  return $form;
}

/**
 * Validation function
 */
function noie6_admin_settings_validate($form, &$form_state) {
  if (!empty($form_state['values']['noie6_firefox']) && !valid_url($form_state['values']['noie6_firefox'], TRUE)) {
    form_set_error('noie6_firefox', t('You must enter a valid URL.'));
  }
  
  if (!empty($form_state['values']['noie6_safari']) && !valid_url($form_state['values']['noie6_safari'], TRUE)) {
    form_set_error('noie6_safari', t('You must enter a valid URL.'));
  }
  
  if (!empty($form_state['values']['noie6_chrome']) && !valid_url($form_state['values']['noie6_chrome'], TRUE)) {
    form_set_error('noie6_chrome', t('You must enter a valid URL.'));
  }
  
  if (!empty($form_state['values']['noie6_opera']) && !valid_url($form_state['values']['noie6_opera'], TRUE)) {
    form_set_error('noie6_opera', t('You must enter a valid URL.'));
  }
  
  if (!empty($form_state['values']['noie6_ie']) && !valid_url($form_state['values']['noie6_ie'], TRUE)) {
    form_set_error('noie6_ie', t('You must enter a valid URL.'));
  }
}

/**
 * Submit function
 */
function noie6_admin_settings_submit($form, &$form_state) {
  $op = isset($form_state['values']['op']) ? $form_state['values']['op'] : '';

  if ($op == t('Reset to defaults')) {
    noie6_restore();
    drupal_set_message(t('The configuration options have been reset to their default values.'));
  }
  else {
    // Save overlay
    variable_set('noie6_overlay', $form_state['values']["noie6_overlay"]);
    
    // Save browser list
    $browsers = variable_get('noie6_browsers', array());
    foreach ($form_state['values'] as $key => $data) {
      //update url elements
      if (substr($key, 0, 3)=='url') {
        //cunningly we have the DB id of the row in the element name
        $id = str_replace('url-', '', $key);
        $browsers[$id]->url = $data;
      }
      //update exclude elements
      if (substr($key, 0, 7)=='exclude') {
        //cunningly we have the DB id of the row in the element name
        $id = str_replace('exclude-', '', $key);
        $browsers[$id]->exclude = $data;
      }
      //update weight elements
      if (substr($key, 0, 6)=='weight') {
        //cunningly we have the DB id of the row in the element name
        $id = str_replace('weight-', '', $key);
        $browsers[$id]->weight = $data;
      }
    }
    variable_set('noie6_browsers', $browsers);
    
    // Save body
    variable_set('noie6_body', $form_state['values']["noie6_body"]);
    
    drupal_set_message(t('The configuration options have been saved.'));
  }
  
  //optionally set the redirect value in form_submit ...
}

/**
 * Restore the original values.
 */
function noie6_restore() {
  // Insert overlay option
  variable_set('noie6_overlay', TRUE);
  
  // Insert browsers list
  variable_set(
    'noie6_browsers',
    array(
      1 => (object)array(
        'name' => 'Firefox',
        'url' => 'http://www.mozilla.com/firefox/',
        'exclude' => FALSE,
        'weight' => 1,
      ),
      2 => (object)array(
        'name' => 'Safari',
        'url' => 'http://www.apple.com/safari/download/',
        'exclude' => FALSE,
        'weight' => 2,
      ),
      3 => (object)array(
        'name' => 'Chrome',
        'url' => 'http://www.google.com/chrome/',
        'exclude' => FALSE,
        'weight' => 3,
      ),
      4 => (object)array(
        'name' => 'Opera',
        'url' => 'http://www.opera.com/download/',
        'exclude' => FALSE,
        'weight' => 4,
      ),
      5 => (object)array(
        'name' => 'Update IE',
        'url' => 'http://www.microsoft.com/windows/internet-explorer/default.aspx',
        'exclude' => FALSE,
        'weight' => 5,
      ),
    )
  );
  
  // Insert explanation message in table variables
  variable_set(
    'noie6_body',
    '<h2>' . t("Internet Explorer 6 is a very old browser and it is not supported in this site.") . '</h2>' .
    '<p>' . t('The following list contains some of the reasons why this browser it is not supported:') . '</p>' .
    '<ul>' .
    '  <li>' . t('It does not support the <a href="@url">W3C standards</a>.', array('@url' => 'http://www.w3.org/standards/agents/browsers')) . '</li>' .
    '  <li>' . t('It is not compatible with <a href="@url">CSS3</a>.', array('@url' => 'http://www.css3.info/selectors-test/')) . '</li>' .
    '  <li>' . t('It has a very low score in <a href="@url">Acid 3 test</a>.', array('@url' => 'http://acid3.acidtests.org/')) . '</li>' .
    '  <li>' . t('It is insecure and slow.') . '</li>' .
    '  <li>' .
        t('There are several movements against this browser: <a href="@url_1">IE6: Do NOT want!</a>, <a href="@url_2">IE Death March</a>, <a href="@url_3">Dear IE6</a>, <a href="@url_4">Stop IE6</a>.',
          array(
            '@url_1' => 'http://ie6.forteller.net/index.php?title=Main_Page',
            '@url_2' => 'http://iedeathmarch.org/',
            '@url_3' => 'http://dearie6.com/',
            '@url_4' => 'http://stopie6.com/',
          )
        ) .
    '  </li>' .
    '  <li>' . t('Google has officially <a href="@url">stopped</a> giving it support.', array('@url' => 'http://googleenterprise.blogspot.com/2010/01/modern-browsers-for-modern-applications.html')) . '</li>' .
    '  <li>' . t('And even a <a href="@url">funeral</a> has been celebrated.', array('@url' => 'http://ie6funeral.com/')) . '</li>' .
    '</ul>' .
    '<h4>' . t('We strongly recommend that you download one of the following browsers:') . '</h4>'
  );
}

/**
 * Implementation of hook_preprocess_page().
 *
 * The script and style will be added for any IE lower than IE7 before the page is rendered.
 */
function noie6_preprocess_page(&$vars) {
    global $user;
  
    if (user_access('browse without warning', $user) == FALSE) {
      /* TODO: I'm not really sure this is the right way to get code from a template inside Drupal.settings */
      $clean_widget = str_replace(array("\r\n", "\n", "\r", '"'), array("", "", "", '\"'), noie6_widget());
      //$clean_widget = noie6_widget();
      
      $module_path = drupal_get_path('module', 'noie6');
      
      // Add style with conditional
      $vars['styles'] .= '
        <!--[if lt IE 7]>
          <link href="' . $module_path . '/noie6.css' . '" media="all" rel="stylesheet" type="text/css" />
        <![endif]-->
      ';
      
      // Add script with conditional
      $vars['scripts'] .= '
        <!--[if lt IE 7]>
          <script type="text/javascript">
            var noie6 = {
              widget: "' . $clean_widget . '"
            };
          </script>
          <script type="text/javascript" src="'. $module_path .'/noie6.js"></script>
        <![endif]-->
      ';
    }
}

/**
 * Implementation of hook_init().
 *
 * Add an empty variable in Drupal.settings to force the load of jquery.js and drupal.js,
 * the variable will be use later to store this module settings.
 */
function noie6_init() {
  drupal_add_js(array('noie6' => NULL), 'setting');
}

/**
* Create the noIE6 widget to display after the page is loaded.
*/
function noie6_widget() {
  $overlay = variable_get('noie6_overlay', TRUE);
  $body = variable_get('noie6_body', 'Sorry but your browser is not supported.');
  
  // Drag and drop table
  $browsers = variable_get('noie6_browsers', array());
  uasort($browsers, 'noie6_cmp');
  
  // Remove excluded browsers
  $ok_browsers = array();
  foreach ($browsers as $browser) {
    if (!$browser->exclude) {
      $ok_browsers[] = array(
        "id" => 'noie6-' . drupal_strtolower(str_replace(' ', '-', $browser->name)),
        "name" => $browser->name,
        'url' => $browser->url,
        "attributes" => array('class' => 'noie6-browser', 'title' => $browser->name),
      );
    }
  }
  
  return theme('noie6_widget', $overlay, $body, $ok_browsers);
}

function theme_noie6_admin_settings($form) {
//  $form = system_settings_form($form);
//  return drupal_render($form);
  //loop through each "row" in the table array
  foreach ($form['rows'] as $id => $row) {
    //we are only interested in numeric keys
    if (intval($id)) {
      $this_row = $row['data']['#value'];
      
      $this_row[] = drupal_render($form['rows'][$id]['url-' . $id]);

      $this_row[] = drupal_render($form['rows'][$id]['exclude-' . $id]);

      //Add the weight field to the row
      $this_row[] = drupal_render($form['rows'][$id]['weight-' . $id]);
 
      //Add the row to the array of rows
      $table_rows[] = array('data' => $this_row, 'class' => 'draggable');
    }
  }
  
  //Make sure the header count matches the column count
  $header = array(t("Browser"), t("URL"), t("Exclude"), t("Order"));

  $output = theme('table', $header, $table_rows, array('id' => 'browsers-table'));
  $output .= drupal_render($form);

  // Call add_tabledrag to add and setup the JS for us
  // The key thing here is the first param - the table ID
  // and the 4th param, the class of the form item which holds the weight
  drupal_add_tabledrag('browsers-table', 'order', 'sibling', 'weight');      

  return $output;
}

/**
* Implementation of hook_theme()
*/
function noie6_theme() {
  return array(
    'noie6_widget' => array(
      'arguments' => array('overlay' => NULL, 'body' => NULL, 'browsers' => NULL),
      'template' => 'noie6-widget',
    ),
    'noie6_admin_settings' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}
